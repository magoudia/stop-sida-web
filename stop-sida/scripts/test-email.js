#!/usr/bin/env node

/**
 * Script de test pour v√©rifier la configuration de l'envoi d'emails
 * Usage: node scripts/test-email.js
 */

const { Resend } = require('resend');
require('dotenv').config();

async function testEmailSetup() {
  console.log('üß™ Test de configuration email...\n');

  // V√©rifier les variables d'environnement
  console.log('üìã V√©rification des variables d\'environnement:');
  console.log(`   RESEND_API_KEY: ${process.env.RESEND_API_KEY ? '‚úÖ Configur√©' : '‚ùå Manquant'}`);
  console.log(`   FROM_EMAIL: ${process.env.FROM_EMAIL ? '‚úÖ Configur√©' : '‚ùå Manquant'}`);
  console.log(`   NODE_ENV: ${process.env.NODE_ENV || 'development'}\n`);

  if (!process.env.RESEND_API_KEY) {
    console.log('‚ùå ERREUR: RESEND_API_KEY n\'est pas configur√©e');
    console.log('   Veuillez ajouter votre cl√© API Resend dans le fichier .env');
    console.log('   Obtenez votre cl√© sur: https://resend.com/api-keys');
    process.exit(1);
  }

  if (!process.env.FROM_EMAIL) {
    console.log('‚ùå ERREUR: FROM_EMAIL n\'est pas configur√©e');
    console.log('   Veuillez ajouter votre email exp√©diteur dans le fichier .env');
    process.exit(1);
  }

  try {
    // Initialiser Resend
    const resend = new Resend(process.env.RESEND_API_KEY);
    console.log('‚úÖ Resend initialis√© avec succ√®s');

    // Test d'envoi d'email
    console.log('\nüìß Test d\'envoi d\'email...');
    
    const testEmail = 'sambasine365@gmail.com';
    const response = await resend.emails.send({
      from: process.env.FROM_EMAIL,
      to: [testEmail],
      subject: 'üß™ Test Configuration Email - Stop SIDA',
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
          <h2 style="color: #dc2626;">‚úÖ Configuration Email R√©ussie !</h2>
          <p>Bonjour,</p>
          <p>Ceci est un email de test pour v√©rifier que la configuration d'envoi d'emails fonctionne correctement.</p>
          
          <div style="background-color: #f0f9ff; padding: 15px; border-radius: 8px; margin: 20px 0; border-left: 4px solid #3b82f6;">
            <h3 style="color: #1e40af; margin-top: 0;">‚úÖ Configuration V√©rifi√©e</h3>
            <ul style="color: #1e40af;">
              <li>‚úÖ API Resend fonctionnelle</li>
              <li>‚úÖ Variables d'environnement configur√©es</li>
              <li>‚úÖ Email exp√©diteur valide</li>
              <li>‚úÖ Connexion API √©tablie</li>
            </ul>
          </div>
          
          <p><strong>Timestamp:</strong> ${new Date().toLocaleString('fr-FR')}</p>
          <p><strong>Environnement:</strong> ${process.env.NODE_ENV || 'development'}</p>
          
          <p style="margin-top: 30px;">
            Cordialement,<br>
            <strong>L'√©quipe Stop SIDA</strong>
          </p>
        </div>
      `,
    });

    if (response.error) {
      console.error('‚ùå Erreur lors du test:', response.error);
      process.exit(1);
    }

    console.log('‚úÖ Email de test envoy√© avec succ√®s!');
    console.log(`   Message ID: ${response.data?.id}`);
    console.log(`   Destinataire: ${testEmail}`);
    console.log('\nüéâ Configuration email op√©rationnelle!');

  } catch (error) {
    console.error('‚ùå Erreur lors du test:', error.message);
    
    if (error.message.includes('Invalid API key')) {
      console.log('\nüí° Solution: V√©rifiez votre cl√© API Resend');
      console.log('   1. Allez sur https://resend.com/api-keys');
      console.log('   2. Copiez votre cl√© API');
      console.log('   3. Mettez √† jour RESEND_API_KEY dans .env');
    } else if (error.message.includes('domain')) {
      console.log('\nüí° Solution: V√©rifiez votre domaine exp√©diteur');
      console.log('   1. Allez sur https://resend.com/domains');
      console.log('   2. Ajoutez et v√©rifiez votre domaine');
      console.log('   3. Mettez √† jour FROM_EMAIL dans .env');
    }
    
    process.exit(1);
  }
}

// Ex√©cuter le test
testEmailSetup();
